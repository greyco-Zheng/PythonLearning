
Python开发工具——Visual Studio Code, Pycharm

使用turtle在屏幕上绘制图形
turtle.pensize(4) 
turtle.pencolor('red')  #画笔颜色
turtle.forward(100)    #向前走100步
turtle.right(90)    #向右转90度
turtle.mainloop()

使用VS Code配anaconda解释器，需要将anaconda添加系统环境变量，否则无法识别

关于if __name__ == '__main__':
python解释器在读取源文件时，设置了一些特殊变量例如__name__，然后执行该文件内所有代码。
1. 如果这个模块为主程序，即调用时使用 python foo.py。解释器会将硬编码的"__main__"分配给变量__name__。
   即做了一个操作：__name__ = "__main__"
2. 如果这个模块是被其他程序调用或导入，而非作为主程序运行，即调用时使用 import foo。解释器会首先检索foo.py文件，
   并首先执行该模块。在这个过程中，将导入该模块时使用的语句中的名称"foo"分配给变量__name__。
   即做了一个操作：__name__ = "foo"
3. 当特殊变量设置完成后，解释器会执行文件中所有的代码。也就是说在一个标准的模块内容中，前半部分为众多函数的定义，
   后半部分为if __name__ == "__main__": 条件下的语句，只有当该模块作为主程序被运行时，变量__name__才被赋值为"__main__",
   if后面的语句才会被执行；当该模块被其他模块/程序导入或调用时，变量"__name__"被赋值为模块名（本例中为"foo"），而不是"__main__"，
   并且跳过if后面的语句，不予执行。
详见https://stackoverflow.com/questions/419163/what-does-if-name-main-do 
   
#关于变量
1. int支持二进制、八进制、十进制、十六进制，使用int()内置函数对变量类型进行转换时，可以指定进制。
2. float()将一个字符串转换成浮点数。
3. str()将指定的对象转换成字符串形式，可以指定编码。
4. chr()将整数转换成该编码对应的字符串 （一个字符）。
5. ord()将字符串（一个字符）转换成对应的编码（一个整数）

#占位符语法——%
%d——整数占位符
%f——小数占位符
%%——百分号占位符

#f字符串
f-string以f开头，用大括号 {} 表示被替换字段，其中直接填入替换内容。
f-string的大括号 {} 可以填入表达式或调用函数
>>> number = 7
>>> f'My lucky number is {number}'
'My lucky number is 7'

>>> name = 'ERIC'
>>> f'My name is {name.lower()}'
'My name is eric'

>>> import math
>>> f'The answer is {math.log(math.pi)}'
'The answer is 1.1447298858494002'

#if-elif-else分支结构
可以用elif的时候就尽量避免使用嵌套结构，使代码“扁平化”，增强代码的可读性

#循环结构
1. for-in循环——知道循环次数或对容器进行迭代 
2. while循环——不知道具体循环次数
3. break关键字可以终止循环，但只能终止其所在的循环
4. continue关键字可以用来放弃 本次循环后续的代码直接让循环进入下一轮
